body, ul, li, p {
    margin: 0px;
    padding: 0px;
    list-style: none;
    font-size: 1.2rem;
    font-family: Arial, Helvetica, sans-serif;
}

body {
    margin-bottom: 100px;
}

a {
    color: white;
    text-decoration: none;
}
img {
    max-width: 100%;
    display: block;  /*QUAL A DIFERENÇA ??*/
}

h1 {
    font-weight: bold;
    margin-top: 100px;
    text-align: center;
}

.header {
    background-color: #1d1e20;
    display: flex;
    flex-wrap: wrap; /*quando a tela ficar pequena os itens caem*/
    justify-content: space-between;
    align-items: center;
    padding: 20px;   
}

.menu {
    display: flex;
}

.menu li {
    margin-left: 10px; 
}

.menu li a {
    padding: 10px;
    display: block;
}

/* CSS FLEXBOX 1*/

.flex {
    display: flex;
    flex-wrap: wrap;
    max-width: 800px;  /*definindo tamanho do container*/
    margin: 0 auto; /*quando maior que 800px, vai alinhar ao centro*/
}

.flex > div {
    flex: 1 1 200px;  /*1- se espande 1- diminui (flex-shrink) 200px: a base, ou seja, nao fica menor*/
    margin: 10px;
}

/* CSS GRID 1*/

.grid1 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* fr = unidade fracional. divide o grid na quantidade de frs que vc definir
        o repeat serve apenas para evitar repetiçaõ, ex: 1fr 1fr 1fr; */
    max-width: 800px;  
    padding: 10px; /*tirando os 10px de cada lado que tem de margin no template do flexbox para alinhara igual*/
    margin: 0 auto;
    grid-gap: 20px;
}

.grid1 > div:nth-child(n + 4) {   /*fala com o "filho" da grid que você selecionar entre parentes. a formula n + x seleciona a partir do x item em diante*/
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 10px;
    align-items: center;
}

.grid1 >div.anuncio {
    grid-column: 1; /*fixa na 1 coluna da grid*/
    grid-row: 2/5; /*fixando da linha 2 ate a linha 5 na coluna 1 da grid*/
    border-top: 10px solid violet;
    display: block;
}

@media (max-width:600px) {
    .grid1 {
        grid-template-columns: 1fr 1fr;
    }
    .grid1 > div:nth-child(n + 4) {
        display: block;
    }
    .grid1 >div.anuncio {
        grid-column: auto;
        grid-row: auto;
        order: -1; /*faz com que visualmente o elemento fique em 1 lugar*/
    }
}

/* GRID 2 */

.grid2 {
    display: grid;
    grid-template-columns: 1fr 200px;
    max-width: 800px;  
    padding: 10px; /*tirando os 10px de cada lado que tem de margin no template do flexbox para alinhara igual*/
    margin: 0 auto;
    grid-gap: 20px;
}

.sidebar > div {
    margin-bottom: 10px;
}
.sidebar {
    display: grid;
    overflow: scroll;
}

@media (max-width: 600px) {
    .grid2 {
        grid-template-columns: 1fr;
    }
    .sidebar {
        display: flex;
        overflow: scroll;        
    }

    .sidebar > div {
        flex: 1 0 200px;
        margin: 0 10px;
    }
}


/* CSS GRID 3 */

.grid3 {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 20px;
    margin: 0 auto;
    padding: 10px;
    max-width: 800px;
}
.grid3 > div:nth-child(1) {
    grid-row: 1 / 3;
}

.grid3 > div {
    display: grid;
}

.grid3 > div img {
    grid-column: 1;
    grid-row: 1/3;
    align-self: end;  /*mantem alinhado no botton da ultima linha*/
}

.grid3 > div p {
    background: rgba(0, 0, 0, 0.6);
    color: white;
    padding: 10PX;
    grid-column: 1;
    grid-row: 2/3;
    align-self: end;
}